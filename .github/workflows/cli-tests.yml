---
name: CLI tests
on:
  workflow_call:
    inputs:
      make_target:
        description: 'Make target to execute'
        type: string
        required: true

jobs:
  integration_tests:
    name: CLI ${{inputs.make_target}}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      # no `-mod=readonly` to test PRs made by @dependabot;
      # `git diff --exit-code` step below still checks what we need
      GOPRIVATE: github.com/percona,github.com/percona/percona-everest-backend,github.com/percona/everest-operator
      PERCONA_VERSION_SERVICE_URL: https://check-dev.percona.com/versions/v1
      MAKE_TARGET: ${{ inputs.make_target }}
    steps:
      - name: Configure git for private modules
        env:
          ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}
        run: git config --global url."https://percona-platform-robot:${ROBOT_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Set up Go release
        uses: percona-platform/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set GO_VERSION environment variable
        run: |
          go version
          echo "GO_VERSION=$(go version)" >> $GITHUB_ENV

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Enable Go modules cache
        uses: percona-platform/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ matrix.os }}-go-${{ matrix.go-version }}-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.os }}-go-${{ matrix.go-version }}-modules-

      - name: Enable Go build cache
        uses: percona-platform/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ matrix.os }}-go-${{ matrix.go-version }}-build-${{ github.ref }}-${{ hashFiles('**') }}
          restore-keys: |
            ${{ matrix.os }}-go-${{ matrix.go-version }}-build-${{ github.ref }}-
            ${{ matrix.os }}-go-${{ matrix.go-version }}-build-


      # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners#supported-runners-and-hardware-resources
      # https://minikube.sigs.k8s.io/docs/drivers/docker/
      - name: Configure minikube
        working-directory: cli-tests
        run: |
          minikube delete --all --purge
          rm -rf ~/.minikube
          minikube config set cpus 2
          minikube start

      - name: Set up Go release for CLI
        uses: percona-platform/setup-go@v4
        with:
          go-version-file: './go.mod'

      - name: Build CLI binary
        run: |
          make init
          make build

      - name: Configure git for private modules
        env:
          ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}
        run: git config --global url."https://percona-platform-robot:${ROBOT_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Run ${{ env.MAKE_TARGET }} integration tests
        working-directory: cli-tests
        id: cli-tests
        run: |
          make init
          make ${{ env.MAKE_TARGET }}

      - name: Collect logs from backend
        if: ${{ always() && steps.cli-tests.outcome != 'success' }}
        working-directory: cli-tests
        run: 'echo "here should be a command to extract and save backend logs"'

      - name: Attach the report
        if: ${{ always() && steps.cli-tests.outcome != 'skipped' }}
        uses: actions/upload-artifact@v3
        with:
          name: test-delete-cluster-tests-report
          path: cli-tests/test-report
