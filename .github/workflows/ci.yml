---
name: CI
on:
  push:
    branches:
      - ci-fix

permissions:
  contents: read
  packages: write
  checks: write
  pull-requests: write

jobs:
  integration_tests:
    name: CLI Integration Tests
    runs-on: ubuntu-20.04
    env:
      # no `-mod=readonly` to test PRs made by @dependabot;
      # `git diff --exit-code` step below still checks what we need
      GOPRIVATE: github.com/percona,github.com/percona/percona-everest-backend,github.com/percona/everest-operator
      PERCONA_VERSION_SERVICE_URL: https://check-dev.percona.com/versions/v1
    steps:
      - name: Configure git for private modules
        env:
          ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}
        run: git config --global url."https://percona-platform-robot:${ROBOT_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Set up Go release
        uses: percona-platform/setup-go@v4
        with:
          go-version-file: './backend/go.mod'

      - name: Set GO_VERSION environment variable
        run: |
          go version
          echo "GO_VERSION=$(go version)" >> $GITHUB_ENV

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          lfs: true
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Enable Go modules cache
        uses: percona-platform/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ matrix.os }}-go-${{ matrix.go-version }}-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.os }}-go-${{ matrix.go-version }}-modules-

      - name: Enable Go build cache
        uses: percona-platform/cache@v3
        with:
          path: ~/.cache/go-build
          key: ${{ matrix.os }}-go-${{ matrix.go-version }}-build-${{ github.ref }}-${{ hashFiles('**') }}
          restore-keys: |
            ${{ matrix.os }}-go-${{ matrix.go-version }}-build-${{ github.ref }}-
            ${{ matrix.os }}-go-${{ matrix.go-version }}-build-

      - name: Checkout Everest backend repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ROBOT_TOKEN }}
          repository: percona/percona-everest-backend
          ref: 'main'
          path: percona-everest-backend

      - name: Run Everest backend
        working-directory: percona-everest-backend
        run: |
          make local-env-up
          SECRETS_ROOT_KEY=$(openssl rand -base64 32) make run-debug &

      - name: Build CLI binary
        run: |
          make init
          make build

      - name: Create KIND cluster
        uses: helm/kind-action@v1.8.0

      - name: Configure git for private modules
        env:
          ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}
        run: git config --global url."https://percona-platform-robot:${ROBOT_TOKEN}@github.com".insteadOf "https://github.com"

      - name: Run integration tests
        working-directory: cli-tests
        id: cli-tests
        run: |
          make init
          make install-operators
          make test-cli

      - name: Attach the report
        if: ${{ always() && steps.cli-tests.outcome != 'skipped' }}
        uses: actions/upload-artifact@v3
        with:
          name: cli-tests-report
          path: cli-tests/test-report


