---
name: CI
on:
  push:
    branches:
      - ci-fix

permissions:
  contents: read
  packages: write
  checks: write
  pull-requests: write

jobs:
  integration_tests:
    name: CLI Integration Tests
    runs-on: ubuntu-20.04
    env:
      # no `-mod=readonly` to test PRs made by @dependabot;
      # `git diff --exit-code` step below still checks what we need
      GOPRIVATE: github.com/percona,github.com/percona/percona-everest-backend,github.com/percona/everest-operator
      PERCONA_VERSION_SERVICE_URL: https://check-dev.percona.com/versions/v1
    steps:
      - name: Check URL Availability
        run: |
            response=$(curl --head --silent --fail -o /dev/null -w "%{http_code}" https://gogle.com)
            if [ "$response" == "200" ]; then
              echo "URL is available"
            else
              echo "URL is not available"
            fi



#      - name: Configure git for private modules
#        env:
#          ROBOT_TOKEN: ${{ secrets.ROBOT_TOKEN }}
#        run: git config --global url."https://percona-platform-robot:${ROBOT_TOKEN}@github.com".insteadOf "https://github.com"
#
#      - name: Check out code into the Go module directory
#        uses: actions/checkout@v4
#        with:
#          lfs: true
#          ref: ${{ github.event.pull_request.head.sha }}
#
#      - name: Checkout Everest backend repo
#        uses: actions/checkout@v4
#        with:
#          token: ${{ secrets.ROBOT_TOKEN }}
#          repository: percona/percona-everest-backend
#          ref: 'main'
#          path: percona-everest-backend
#
#      - name: Set up Go release
#        uses: percona-platform/setup-go@v4
#        with:
#          go-version-file: './percona-everest-backend/go.mod'
#
#      - name: Run Everest backend
#        working-directory: percona-everest-backend
#        run: |
#          make local-env-up
#          SECRETS_ROOT_KEY=$(openssl rand -base64 32) make run-debug &




